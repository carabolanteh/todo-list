{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Form","setTodos","todos","inputText","setInputText","onChange","e","target","value","type","className","onClick","preventDefault","text","complete","id","Math","random","name","Todo","todo","completed","map","item","filter","tarea","TodoList","filteredTodos","App","useState","status","setStatus","setFilteredTodos","useEffect","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","getLocalTodos","filteredHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55ed2ed5.chunk.js","sourcesContent":["const Form = ({setTodos, todos, inputText, setInputText}) => {\r\n// const Form = (props) => {\r\n    // const {setTodos} = props;\r\n\r\n    const  submitTodoHandler = e => {\r\n        e.preventDefault()\r\n        setTodos([...todos,{\r\n            text: inputText,\r\n            complete: false,\r\n            id: Math.random() * 10000\r\n        }])\r\n        setInputText('')\r\n    }\r\n    const inputTextHandler = e => {\r\n        setInputText(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <form>\r\n            <input \r\n                onChange={inputTextHandler}\r\n                type=\"text\" \r\n                value={inputText}className=\"todo-list\"\r\n            />\r\n            <button\r\n                onClick={submitTodoHandler}\r\n                className='todo-button'\r\n                type=\"submit\"\r\n            >\r\n            <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className='select'>\r\n                <select\r\n                    name='todos' className='filter-todo'>\r\n                        <option value=\"all\">Todas</option>\r\n                        <option value=\"complete\">Completas</option>\r\n                        <option value=\"incomplete\">Incomplete</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\nexport default Form;","const Todo = ({todo, todos, setTodos}) => {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(tarea => tarea.id !== todo.id))\r\n    }\r\n    const completeHandler = () => {\r\n        // console.log(todo.id);\r\n        setTodos(todos.map(item=>{\r\n            if(todo.id === item.id){\r\n                // console.log(item);\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n\r\n    return(\r\n        <div className=\"todo\">\r\n            <li \r\n                className={`todo-item ${todo.completed && \"completed\"}`}\r\n            >{todo.text}</li>\r\n            <button \r\n                onClick={completeHandler}\r\n                className={`complete-btn ${todo.completed && \"boton-rojo\"}`}\r\n            >\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button \r\n                onClick={deleteHandler}\r\n                className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Todo;","import Todo from './Todo';\r\n\r\nconst TodoList = ({todos, setTodos,  filteredTodos}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n        {filteredTodos.map(todo => (\r\n            <Todo\r\n              todos={todos}\r\n              todo={todo}\r\n              setTodos={setTodos}\r\n              key={todo.id}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import {useState, useEffect} from \"react\";\nimport './App.css';\n\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n\n  // //Hook de actualizacion de estado\n  ////Ejemplo en js vanilla\n\n  // variable\n  // const todos = [];\n\n  //FunciÃ³n que actualiza la variable\n  // const setTodos = () => {\n  //   todos = [{uno:'uno'}]\n  // }\n\n  //Dentro de useState esta el valor inicial, en este caso un arreglo\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n\n\n  useEffect(() => {\n    const getLocalTodos = () => {\n      if(localStorage.getItem('todos') == null){\n        localStorage.setItem('todos', JSON.stringify(todos))\n      } else {\n        const todoLocal = JSON.parse(localStorage.getItem('todos'))\n        setTodos(todoLocal)\n      }\n    }\n    getLocalTodos();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n\n  useEffect(() => {\n    const filteredHandler = () => {\n      switch(status) {\n        case 'completed' :\n          setFilteredTodos(todos.filter(tarea => tarea.completed === true))\n        break;\n        case 'uncompleted' :\n          setFilteredTodos(todos.filter(tarea => tarea.completed === false))\n        break;\n        default:\n          setFilteredTodos(todos);\n      }\n    }\n    const saveLocalTodos = () => {\n      localStorage.setItem('todos', JSON.stringify(todos))\n    }\n    filteredHandler();\n    saveLocalTodos();\n  },[todos, status])  \n\n\n  return (\n    //solo se puede retornar un solo elem, muy grande\n    <div>\n      <header>\n      <h1> Todo List</h1>\n      </header>\n\n      {/* //Le pasamos a Form la funcion que actualiza el estado */}\n      <Form \n        todos={todos}\n        setTodos={setTodos} \n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n\n      <TodoList \n        todos={todos}\n        setTodos={setTodos}\n        \n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'; //buscar la libreria de react\nimport ReactDOM from 'react-dom'; // libreria de DOm\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}