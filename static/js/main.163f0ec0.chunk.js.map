{"version":3,"sources":["firebase-config.js","components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Form","setTodos","todos","inputText","setInputText","setStatus","guardarEnFirebase","tarea","collection","add","then","docRef","console","log","id","catch","error","onChange","e","target","value","type","className","disabled","trim","length","onClick","preventDefault","text","completed","Math","random","name","event","Todo","todo","editarCompleted","doc","set","delete","TodoList","filteredTodos","map","App","useState","status","setFilteredTodos","useEffect","get","querySnapshot","docs","forEach","push","data","filter","filteredHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.163f0ec0.chunk.js","sourcesContent":["  import firebase from 'firebase/app';\r\n  import 'firebase/firestore';\r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyBhAteNEWiV1YQ7oH3CN5QecypgjWPCWTI\",\r\n    authDomain: \"todo-list-f6b1b.firebaseapp.com\",\r\n    projectId: \"todo-list-f6b1b\",\r\n    storageBucket: \"todo-list-f6b1b.appspot.com\",\r\n    messagingSenderId: \"446092711948\",\r\n    appId: \"1:446092711948:web:f12db192dd759796793629\"\r\n  };\r\n  // Initialize Firebase\r\n  const fb = firebase.initializeApp(firebaseConfig);\r\nexport  const db = fb.firestore();","import {db} from '../firebase-config';\r\n\r\nconst Form = ({setTodos, todos, inputText, setInputText, setStatus}) => {\r\n// const Form = (props) => {\r\n    // const {setTodos} = props;\r\n\r\n    const  submitTodoHandler = e => {\r\n        e.preventDefault()\r\n        setTodos([...todos,{\r\n            text: inputText,\r\n            completed: false,\r\n            id: Math.random() * 10000\r\n        }])\r\n        guardarEnFirebase({\r\n            text: inputText,\r\n            completed: false,\r\n            id: Math.random() * 10000\r\n        })\r\n        setInputText('')\r\n    }\r\n    const inputTextHandler = e => {\r\n        setInputText(e.target.value);\r\n    }\r\n\r\n    const statusHandler = event => {\r\n        setStatus(event.target.value);\r\n    }\r\n\r\n    const guardarEnFirebase = tarea =>{\r\n        // Add a new document with a generated id.\r\n        db.collection(\"todos\").add(tarea)\r\n        .then((docRef) => {\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n        })\r\n        .catch((error) => {\r\n             console.error(\"Error adding document: \", error);\r\n        });\r\n    }\r\n\r\n    return(\r\n        <form>\r\n            <input \r\n                onChange={inputTextHandler}\r\n                type=\"text\" \r\n                value={inputText}className=\"todo-list\"\r\n            />\r\n            <button\r\n            disabled={inputText.trim().length === 0}\r\n                onClick={submitTodoHandler}\r\n                className='todo-button'\r\n                type=\"submit\"\r\n            >\r\n            <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className='select'>\r\n            <select\r\n                name=\"todos\" \r\n                className=\"filter-todo\"\r\n                onChange={statusHandler}\r\n            >\r\n                <option value=\"all\">Todas</option>\r\n                <option value=\"completed\">Completas</option>\r\n                <option value=\"uncompleted\">Incompletas</option>\r\n            </select>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\nexport default Form;","import {db} from '../firebase-config';\r\n\r\n\r\nconst Todo = ({todo, todos, setTodos}) => {\r\n    const deleteHandler = () => {\r\n        // setTodos(todos.filter(tarea => tarea.id !== todo.id))\r\n        // console.log(todo.id)\r\n        db.collection(\"todos\").doc(todo.id).delete().then(() => {\r\n          console.log(\"Document successfully deleted!\");\r\n        }).catch((error) => {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n      }\r\n    \r\n    const completeHandler = () => {\r\n        // console.log(todo.id);\r\n        // setTodos(todos.map(item=>{\r\n        //     if(todo.id === item.id){\r\n        //         // console.log(item);\r\n        //         return {\r\n        //             ...item, completed: !item.completed\r\n        //         }\r\n        //     }\r\n        //     return item;\r\n        // }))\r\n        editarCompleted(todo);\r\n    }\r\n\r\n    const editarCompleted = tarea => {\r\n        // Add a new document in collection \"cities\"\r\n        db.collection(\"todos\").doc(tarea.id).set({\r\n            ...tarea, completed: !tarea.completed\r\n        })\r\n        .then(() => {\r\n            console.log(\"Document successfully written!\");\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n        });\r\n\r\n     }\r\n\r\n    return(\r\n        <div className=\"todo\">\r\n            <li \r\n                className={`todo-item ${todo.completed && \"completed\"}`}\r\n            >{todo.text}</li>\r\n            <button \r\n                onClick={completeHandler}\r\n                className={`complete-btn ${todo.completed && \"boton-rojo\"}`}\r\n            >\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button \r\n                onClick={deleteHandler}\r\n                className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Todo;","import Todo from './Todo';\r\n\r\nconst TodoList = ({todos, setTodos,  filteredTodos}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n        {filteredTodos.map(todo => (\r\n            <Todo\r\n              todos={todos}\r\n              todo={todo}\r\n              setTodos={setTodos}\r\n              key={todo.id}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import {useState, useEffect} from \"react\";\nimport './App.css';\n\nimport { db } from './firebase-config'\n\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n\n  // //Hook de actualizacion de estado\n  ////Ejemplo en js vanilla\n\n  // variable\n  // const todos = [];\n\n  //FunciÃ³n que actualiza la variable\n  // const setTodos = () => {\n  //   todos = [{uno:'uno'}]\n  // }\n\n  //Dentro de useState esta el valor inicial, en este caso un arreglo\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  const traerDesdeFirebase = () => {\n    db.collection(\"todos\").get().then((querySnapshot) => {\n      const docs = [];\n      querySnapshot.forEach((doc) => {\n          // doc.data() is never undefined for query doc snapshots\n          // console.log(doc.id, \" => \", doc.data());\n          docs.push({...doc.data(), id: doc.id});\n      });\n      setTodos(docs);\n    });\n  }\n\n\n  useEffect(() => {\n    // const getLocalTodos = () => {\n    //   if(localStorage.getItem('todos') == null){\n    //     localStorage.setItem('todos', JSON.stringify(todos))\n    //   } else {\n    //     const todoLocal = JSON.parse(localStorage.getItem('todos'))\n    //     setTodos(todoLocal)\n    //   }\n    // }\n    // getLocalTodos();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  traerDesdeFirebase();\n  },[todos])\n\n  useEffect(() => {\n    const filteredHandler = () => {\n      switch(status) {\n        case 'completed' :\n          setFilteredTodos(todos.filter(tarea => tarea.completed === true))\n        break;\n        case 'uncompleted' :\n          setFilteredTodos(todos.filter(tarea => tarea.completed === false))\n        break;\n        default:\n          setFilteredTodos(todos);\n      }\n    }\n    // const saveLocalTodos = () => {\n    //   localStorage.setItem('todos', JSON.stringify(todos))\n    // }\n    filteredHandler();\n    // saveLocalTodos();\n  },[todos, status])  \n\n\n  return (\n    //solo se puede retornar un solo elem, muy grande\n    <div>\n      <header>\n      <h1> Todo List</h1>\n      </header>\n\n      {/* //Le pasamos a Form la funcion que actualiza el estado */}\n      <Form \n        todos={todos}\n        setTodos={setTodos} \n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n\n      <TodoList \n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'; //buscar la libreria de react\nimport ReactDOM from 'react-dom'; // libreria de DOm\nimport './index.css';\nimport App from './App';\nimport './firebase-config';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}